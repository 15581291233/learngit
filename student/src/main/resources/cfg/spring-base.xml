<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">


    <context:component-scan base-package="com.skywares,com.student" />
    <!-- datasource begin -->
    <bean id="ds" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="com.mysql.jdbc.Driver" />  
        <property name="jdbcUrl" value="jdbc:mysql://182.254.139.63:3306/student?characterEncoding=utf8" />
        <property name="user" value="yunduo" />  
        <property name="password" value="hX-DB-ydroom01" />

        <property name="initialPoolSize" value="5" />
        <property name="minPoolSize" value="5" />
        <property name="maxPoolSize" value="10" />
        <property name="acquireIncrement" value="3" />
        <property name="maxIdleTime" value="1800" />
        <property name="idleConnectionTestPeriod" value="60" />
        <property name="acquireRetryAttempts" value="30" />
        <property name="maxStatements" value="0" />
        <!--连接池用完时客户调用getConnection()后等待获取连接的时间，单位：毫秒。超时后会抛出 -->
        <!--SQLEXCEPTION，如果设置0，则无限等待。Default:0 -->
        <property name="checkoutTimeout" value="100" />
        <property name="preferredTestQuery" value="select 1" />
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">none</prop>

            </props>
        </property>
        <property name="packagesToScan" value="com.skywares,com.student.projo" />
    </bean>

    <bean id="dataSource" class="com.skywares.fw.ds.MultiDataSource">
        <property name="dataSource" ref="ds" />
    </bean>

    <bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
        <property name="dataSource" ref="dataSource" />
    </bean>

    <aop:config>
        <aop:pointcut id="businessService" expression="execution(* com..service.*.*(..))" />
        <aop:advisor pointcut-ref="businessService" advice-ref="txAdvice" />

        <aop:aspect id="TestAspect" ref="bizServiceAspectBean">
            <!-- <aop:before pointcut-ref="businessService" method="doBefore"/> <aop:after pointcut-ref="businessService" 
                method="doAfter"/> <aop:after-throwing pointcut-ref="businessService" method="doThrowing" throwing="ex"/> -->
            <aop:around pointcut-ref="businessService" method="doAround" />
        </aop:aspect>
    </aop:config>

    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes> 
           <!--  <tx:method name="find*" read-only="true" />  
            <tx:method name="get*" read-only="true" />  
            <tx:method name="query*" read-only="true" />  
            <tx:method name="retrieve*" read-only="true" />  --> 
            <tx:method name="refundQuery" read-only="false" /> 
            <tx:method name="*" read-only="false" /> 
        </tx:attributes> 
    </tx:advice>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
        <constructor-arg ref="sessionFactory" />
    </bean>
    <!-- datasource end -->

    <mvc:annotation-driven />

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**" />
            <bean class="com.skywares.fw.web.interceptor.TokenInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>

    <bean id="sqlDialect" class="com.skywares.fw.dao.generic.dialect.MySqlDialect" />
    
    <bean class="com.skywares.fw.i18n.I18nManager">
        <property name="basenames" value="classpath:/i18n/message,classpath:/i18n/error,classpath:/i18n/fw_security_message" />
        <property name="useCodeAsDefaultMessage" value="true" />
        <property name="cacheSeconds" value="3600" />
    </bean>

    <bean id="fwUdcService" class="com.skywares.fw.udc.service.UdcServiceImpl">
        <property name="cacheService" ref="fwEhcacheService" />
    </bean>

    <bean id="fwTransSeqService" class="com.skywares.fw.seq.service.TransSeqServiceImpl" destroy-method="destroy" />
</beans>
